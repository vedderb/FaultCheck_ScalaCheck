/*
	Copyright 2014 Benjamin Vedder	benjamin@vedder.se

	This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
    */

package e2e;

import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : e2e_protection.h:4</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("e2etest") 
public class E2E_CONFIGURATION extends StructObject {
	@Field(0) 
	public byte max_seq_diff() {
		return this.io.getByteField(this, 0);
	}
	@Field(0) 
	public E2E_CONFIGURATION max_seq_diff(byte max_seq_diff) {
		this.io.setByteField(this, 0, max_seq_diff);
		return this;
	}
	@Field(1) 
	public byte data_size() {
		return this.io.getByteField(this, 1);
	}
	@Field(1) 
	public E2E_CONFIGURATION data_size(byte data_size) {
		this.io.setByteField(this, 1, data_size);
		return this;
	}
	public E2E_CONFIGURATION() {
		super();
	}
	public E2E_CONFIGURATION(Pointer pointer) {
		super(pointer);
	}
}
